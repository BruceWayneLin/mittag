<?xml version="1.0" encoding="UTF-8"?>
<modification>
   <name>Facebook Login By Rahul Jain</name>
    <code>FBLogin</code>
   <id>FBLogin</id>
   <version>1.0</version>
   <vqmver>2.X</vqmver>
   <author>Rahul Jain - rahuljain1991@live.com</author>
   
   
   <file name="catalog/view/theme/*/template/checkout/checkout.tpl">
       <operation info="Facebook Login on Checkout Page">
	   
	   <search position="iafter"><![CDATA[<a href="<?php echo $forgotten; ?>"><?php echo $text_forgotten; ?></a>]]></search>
           <add><![CDATA[
		                <script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else {
      // The person is not logged into your app or we are unable to tell.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '1547694045318406',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.8' // use graph api version 2.8
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
     FB.api('/me', {fields: "email,first_name,last_name"}, function(response) {
        $.ajax({
            url: '<?php echo HTTP_SERVER;?>index.php?route=account/login/fblogin',
            data : 'email_address='+response.email+'&fname='+response.first_name+'&lname='+response.last_name+'&login_via=facebook',
            type : 'post',
            success: function(result) {
                if(result == 'success'){
                    window.location.reload();
                } else if(result == 'registered'){
                    window.location.reload();
                } else{
                    $('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i>Error: Please try again later or login with password</div>').insertBefore($('div.account-login'));
                }
                
            }
        });
    });
  }
</script>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

<div class="fb-login-button" scope="public_profile,email" data-max-rows="1" data-size="large"
data-button-type="login_with" onlogin="checkLoginState();" 
data-show-faces="false" data-auto-logout-link="false" 
data-use-continue-as="false"
></div>



           ]]></add>
		   
       </operation>
   </file>
   
   
   
   <file name="catalog/view/theme/*/template/account/login.tpl">
       <operation info="Facebook Login on Login Page">
	   
	   <search position="iafter"><![CDATA[</form>]]></search>
           <add><![CDATA[
		   <script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else {
      // The person is not logged into your app or we are unable to tell.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '1547694045318406',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.8' // use graph api version 2.8
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
     FB.api('/me', {fields: "email,first_name,last_name"}, function(response) {
        $.ajax({
            url: '<?php echo HTTP_SERVER;?>index.php?route=account/login/fblogin',
            data : 'email_address='+response.email+'&fname='+response.first_name+'&lname='+response.last_name+'&login_via=facebook',
            type : 'post',
            success: function(result) {
                if(result == 'success'){
                    window.location.reload();
                } else if(result == 'registered'){
                    window.location.reload();
                } else{
                    $('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i>Error: Please try again later or login with password</div>').insertBefore($('div.account-login'));
                }
                
            }
        });
    });
  }
</script>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

<div class="fb-login-button" scope="public_profile,email" data-max-rows="1" data-size="large"
data-button-type="login_with" onlogin="checkLoginState();" 
data-show-faces="false" data-auto-logout-link="false" 
data-use-continue-as="false"
style="height: 31px;
    width: 156px;
    margin: 0 auto;
    display: block;
    margin-top: 10px;
    margin-bottom: 10px;
"></div>


	     ]]></add>
		   
       </operation>
   </file>
   <file name="catalog/controller/account/login.php">
       <operation info="AJAX URL link in Controller">
	   
	   <search position="iafter"><![CDATA[private $error = array();]]>
            </search>
            <add><![CDATA[
                 public function fbLogin()
        {
			
            $this->load->model('account/customer');
            if(isset($this->request->post['email_address']) && $this->request->post['email_address'] != 'undefined'){
                //First check if this user already registered or not
                $customer_info = $this->model_account_customer->getCustomerByEmail($this->request->post['email_address']);
                
                if(!empty($customer_info)){ //Customer already registered , Only Log in the customer
                    if ($customer_info && $this->customer->login($customer_info['email'], '', true)) {
                                    // Default Addresses
                                    $this->load->model('account/address');

                                    if ($this->config->get('config_tax_customer') == 'payment') {
                                            $this->session->data['payment_address'] = $this->model_account_address->getAddress($this->customer->getAddressId());
                                    }

                                    if ($this->config->get('config_tax_customer') == 'shipping') {
                                            $this->session->data['shipping_address'] = $this->model_account_address->getAddress($this->customer->getAddressId());
                                    }
                    }
                    if ($this->customer->isLogged()) {
                        echo "success";
                    } else{
                        echo "error";
                    }
                } else{ // Need to register customer with a default password
                    $data['email'] = $this->request->post['email_address'];
                    $data['firstname'] = $this->request->post['fname'];
                    $data['lastname'] = $this->request->post['lname'];
                    $data['telephone'] = '';
                    $data['fax'] = '';
                    $data['password'] = '';
                    $data['company'] = '';
                    $data['address_1'] = '';
                    $data['address_2'] = '';
                    $data['city'] = '';
                    $data['postcode'] = '';
                    $data['country_id'] = '';
                    $data['zone_id'] = '';
                    $customer_id = $this->model_account_customer->addCustomer($data);
                    if ($customer_id && $this->customer->login($data['email'], '', true)) {
                                    // Default Addresses
                                    $this->load->model('account/address');

                                    if ($this->config->get('config_tax_customer') == 'payment') {
                                            $this->session->data['payment_address'] = $this->model_account_address->getAddress($this->customer->getAddressId());
                                    }

                                    if ($this->config->get('config_tax_customer') == 'shipping') {
                                            $this->session->data['shipping_address'] = $this->model_account_address->getAddress($this->customer->getAddressId());
                                    }
                    }
                    if ($this->customer->isLogged()) {
                        echo "registered";
                    } else{
                        echo "error";
                    }
                }
                
            } else{
                echo "error";
            }
            die;
        }
            ]]>   
            </add>
       </operation>
   </file>
</modification>